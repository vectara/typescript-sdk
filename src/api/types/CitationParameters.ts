/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * Style the generator should use when making citations.
 */
export interface CitationParameters {
    /** The citation style to be used in summary. Can be one of: * `numeric` - Citations formatted as simple numerals: \[1\], \[2\] ... * `none` - Citations removed from text. * `html` - Citation formatted as a URL like `<a href="url_pattern">text_pattern</a>`. * `markdown` - Formatted as `[text_pattern](url_pattern)`. */
    style?: CitationParameters.Style;
    /** The URL pattern if the citation_style is set to `html` or `markdown`. The pattern can access metadata attributes in the document or part. e.g. `https://my.doc/foo/{doc.id}/{part.id}` The default `url_pattern` is an empty string. */
    url_pattern?: string;
    /** The text pattern if the citation_style is set to `html` or `markdown`. This pattern sets the href for HTML or the text within `[]` in markdown, and defaults to N being the index of result if it is not set. The default citation style looks like `[N](<url_pattern>)` for markdown. You can use metadata attributes in the `text_pattern`. For example, the pattern `{doc.title}` with citation style `markdown` would result in final citation output like `[Title](<url_pattern>)` when the document's metadata includes `{"title":"Title"}`. */
    text_pattern?: string;
}

export namespace CitationParameters {
    /**
     * The citation style to be used in summary. Can be one of: * `numeric` - Citations formatted as simple numerals: \[1\], \[2\] ... * `none` - Citations removed from text. * `html` - Citation formatted as a URL like `<a href="url_pattern">text_pattern</a>`. * `markdown` - Formatted as `[text_pattern](url_pattern)`.
     */
    export type Style = "none" | "numeric" | "html" | "markdown";
    export const Style = {
        None: "none",
        Numeric: "numeric",
        Html: "html",
        Markdown: "markdown",
    } as const;
}
