/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Vectara from "../index";

export interface Corpus {
    /** Vectara ID of the corpus. */
    id?: string;
    key?: Vectara.CorpusKey;
    /** Name for the corpus. This value defaults to the key. */
    name?: string;
    /** Corpus description. */
    description?: string;
    /** Specifies whether the corpus is enabled or not. */
    enabled?: boolean;
    /** Indicates that this corpus does not store documents and stores chats instead. */
    chatHistoryCorpus?: boolean;
    /**
     * Queries made to this corpus are considered answers, and not questions.
     * This swaps the semantics of the encoder used at query time.
     */
    queriesAreAnswers?: boolean;
    /**
     * Documents inside this corpus are considered questions, and not answers.
     * This swaps the semantics of the encoder used at indexing.
     */
    documentsAreQuestions?: boolean;
    /**
     * The encoder used by the corpus.
     * _Deprecated_: use `encoder_name` instead
     */
    encoderId?: string;
    /** The encoder used by the corpus. */
    encoderName?: string;
    /** The new filter attributes of the corpus. */
    filterAttributes?: Vectara.FilterAttribute[];
    /** The custom dimensions of all document parts inside the corpus. */
    customDimensions?: Vectara.CorpusCustomDimension[];
    limits?: Vectara.CorpusLimits;
    /** Indicates when the corpus was created. */
    createdAt?: Date;
}
