/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Vectara from "../index.js";

/**
 * A corpus is a collection of documents and associated configuration for indexing, searching, and generating responses through RAG.
 */
export interface Corpus {
    /** Vectara ID of the corpus. */
    id?: string;
    key?: Vectara.CorpusKey;
    /** Name for the corpus. This value defaults to the key. */
    name?: string;
    /** Corpus description. */
    description?: string;
    /** Specifies whether the corpus is enabled or not. */
    enabled?: boolean;
    /** Indicates that this corpus does not store documents and stores chats instead. */
    chat_history_corpus?: boolean;
    /** Queries made to this corpus are considered answers, and not questions. This swaps the semantics of the encoder used at query time. */
    queries_are_answers?: boolean;
    /** Documents inside this corpus are considered questions, and not answers. This swaps the semantics of the encoder used at indexing. */
    documents_are_questions?: boolean;
    /** The encoder used by the corpus. *Deprecated*: Use `encoder_name` instead */
    encoder_id?: string;
    /** The encoder used by the corpus, `boomerang-2023-q3`. */
    encoder_name?: string;
    /** Indicates whether to save corpus queries to query history by default. */
    save_history?: boolean;
    /** The new filter attributes of the corpus. */
    filter_attributes?: Vectara.FilterAttribute[];
    /** The custom dimensions of all document parts inside the corpus. */
    custom_dimensions?: Vectara.CorpusCustomDimension[];
    limits?: Corpus.Limits;
    /** Indicates when the corpus was created. */
    created_at?: string;
}

export namespace Corpus {
    export interface Limits {
        /** The number of documents contained in the corpus. */
        used_docs?: number;
        /** The number of document parts contained in the corpus. */
        used_parts?: number;
        /** NOTE: This field is currently not populated by the system. The number of bytes contained in the corpus. This includes the document metadata, document part metadata, and document contents. */
        used_bytes?: number;
        /** The number of characters contained in the corpus. This includes the document metadata, document part metadata, and document contents. */
        used_characters?: number;
        /** NOTE: This field is currently not populated by the system. The maximum number of bytes the corpus can be. */
        max_bytes?: number;
        /** The maximum size that metadata can be on documents. */
        max_metadata_bytes?: number;
        /** NOTE: This field is currently not populated by the system. The maximum per-second addition of new documents to corpus. */
        index_rate?: number;
    }
}
