/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Vectara from "../../../index.js";

/**
 * Full response to a chat question when the result is not streamed.
 */
export interface ChatsCreateTurnsResponse {
    /** If the chat response was stored, the ID of the chat. */
    chat_id?: string;
    /** If the chat response was stored, the ID of the turn. */
    turn_id?: string;
    /** The message from the chat model for the chat message. */
    answer?: string;
    /** The language that the answer is expected to be. */
    response_language?: Vectara.Language;
    /** The ranked search results that the chat model used. */
    search_results?: Vectara.IndividualSearchResult[];
    /** Indicates the probability that the summary is factually consistent with the results. The system excludes this property if it encounters excessively large outputs or search results. */
    factual_consistency_score?: number;
    /** The rendered prompt sent to the LLM. Useful when creating customer `prompt_template` templates. */
    rendered_prompt?: string;
    /** Non-fatal warnings that occurred during request processing */
    warnings?: Vectara.QueryWarning[];
    /** View the actual query made to backend that was rephrased by the LLM from the input query. */
    rephrased_query?: string;
    /** The rewritten queries for the corpora that were searched. Only populated when intelligent_query_rewriting is enabled. */
    rewritten_queries?: Vectara.RewrittenQuery[];
}
