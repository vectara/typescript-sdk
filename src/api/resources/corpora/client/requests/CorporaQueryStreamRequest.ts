/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Vectara from "../../../../index.js";

/**
 * @example
 *     {
 *         query: "How to configure OAuth2 for microservices in Kubernetes?",
 *         search: {
 *             limit: 50,
 *             context_configuration: {
 *                 sentences_before: 2,
 *                 sentences_after: 2,
 *                 start_tag: "<em>",
 *                 end_tag: "</em>"
 *             },
 *             reranker: {
 *                 type: "customer_reranker",
 *                 reranker_name: "Rerank_Multilingual_v1",
 *                 limit: 50,
 *                 include_context: true
 *             },
 *             metadata_filter: "doc.topic = 'authentication' and doc.platform = 'kubernetes'",
 *             lexical_interpolation: 0.005
 *         },
 *         generation: {
 *             generation_preset_name: "vectara-summary-ext-24-05-med-omni",
 *             max_used_search_results: 10,
 *             citations: {
 *                 style: "markdown",
 *                 url_pattern: "https://vectara.com/documents/{doc.id}",
 *                 text_pattern: "{doc.title}"
 *             }
 *         },
 *         save_history: true,
 *         intelligent_query_rewriting: true
 *     }
 */
export interface CorporaQueryStreamRequest {
    /**
     * The API will make a best effort to complete the request in the specified seconds or time out.
     */
    "Request-Timeout"?: number;
    /**
     * The API will make a best effort to complete the request in the specified milliseconds or time out.
     */
    "Request-Timeout-Millis"?: number;
    /** The search query string, which is the question the user is asking. */
    query: string;
    /** The parameters to search one corpus. */
    search?: CorporaQueryStreamRequest.Search;
    generation?: Vectara.GenerationParameters;
    /** Indicates whether to save the query to query history. */
    save_history?: boolean;
    /** [Tech Preview] Indicates whether to enable intelligent query rewriting. When enabled, the platform will attempt to extract metadata filter and rewrite the query to improve search results. Read [here](https://docs.vectara.com/docs/search-and-retrieval/intelligent-query-rewriting) for more details. */
    intelligent_query_rewriting?: boolean;
}

export namespace CorporaQueryStreamRequest {
    /**
     * The parameters to search one corpus.
     */
    export interface Search extends Vectara.SearchCorpus, Vectara.SearchParameters {}
}
