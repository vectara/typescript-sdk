/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Vectara from "../../../../../api/index";
import * as core from "../../../../../core";
import { SearchCorpusParameters } from "../../types/SearchCorpusParameters";
import { GenerationParameters } from "../../../../types/GenerationParameters";

export const CorporaQueryStreamRequest: core.serialization.Schema<
    serializers.CorporaQueryStreamRequest.Raw,
    Omit<Vectara.CorporaQueryStreamRequest, "requestTimeout" | "requestTimeoutMillis">
> = core.serialization.object({
    query: core.serialization.string(),
    search: SearchCorpusParameters.optional(),
    generation: GenerationParameters.optional(),
    saveHistory: core.serialization.property("save_history", core.serialization.boolean().optional()),
});

export declare namespace CorporaQueryStreamRequest {
    interface Raw {
        query: string;
        search?: SearchCorpusParameters.Raw | null;
        generation?: GenerationParameters.Raw | null;
        save_history?: boolean | null;
    }
}
