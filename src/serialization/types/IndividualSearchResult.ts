/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vectara from "../../api/index";
import * as core from "../../core";
import { Table } from "./Table";

export const IndividualSearchResult: core.serialization.ObjectSchema<
    serializers.IndividualSearchResult.Raw,
    Vectara.IndividualSearchResult
> = core.serialization.object({
    text: core.serialization.string().optional(),
    score: core.serialization.number().optional(),
    partMetadata: core.serialization.property(
        "part_metadata",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    documentMetadata: core.serialization.property(
        "document_metadata",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    documentId: core.serialization.property("document_id", core.serialization.string().optional()),
    table: Table.optional(),
    requestCorporaIndex: core.serialization.property("request_corpora_index", core.serialization.number().optional()),
});

export declare namespace IndividualSearchResult {
    interface Raw {
        text?: string | null;
        score?: number | null;
        part_metadata?: Record<string, unknown> | null;
        document_metadata?: Record<string, unknown> | null;
        document_id?: string | null;
        table?: Table.Raw | null;
        request_corpora_index?: number | null;
    }
}
