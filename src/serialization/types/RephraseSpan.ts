/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vectara from "../../api/index";
import * as core from "../../core";

export const RephraseSpan: core.serialization.ObjectSchema<serializers.RephraseSpan.Raw, Vectara.RephraseSpan> =
    core.serialization.object({
        type: core.serialization.stringLiteral("rephrase"),
        latencyMillis: core.serialization.property("latency_millis", core.serialization.number().optional()),
        startedAt: core.serialization.property("started_at", core.serialization.date().optional()),
        rephrasedQuery: core.serialization.property("rephrased_query", core.serialization.string().optional()),
    });

export declare namespace RephraseSpan {
    interface Raw {
        type: "rephrase";
        latency_millis?: number | null;
        started_at?: string | null;
        rephrased_query?: string | null;
    }
}
