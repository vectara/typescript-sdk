/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vectara from "../../api/index";
import * as core from "../../core";
import { IndividualSearchResult } from "./IndividualSearchResult";

export const StreamSearchResponse: core.serialization.ObjectSchema<
    serializers.StreamSearchResponse.Raw,
    Vectara.StreamSearchResponse
> = core.serialization.object({
    type: core.serialization.stringLiteral("search_results"),
    searchResults: core.serialization.property(
        "search_results",
        core.serialization.list(IndividualSearchResult).optional()
    ),
});

export declare namespace StreamSearchResponse {
    interface Raw {
        type: "search_results";
        search_results?: IndividualSearchResult.Raw[] | null;
    }
}
