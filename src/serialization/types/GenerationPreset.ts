/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vectara from "../../api/index";
import * as core from "../../core";

export const GenerationPreset: core.serialization.ObjectSchema<
    serializers.GenerationPreset.Raw,
    Vectara.GenerationPreset
> = core.serialization.object({
    name: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    llmName: core.serialization.property("llm_name", core.serialization.string().optional()),
    promptTemplate: core.serialization.property("prompt_template", core.serialization.string().optional()),
    maxUsedSearchResults: core.serialization.property(
        "max_used_search_results",
        core.serialization.number().optional()
    ),
    maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
    temperature: core.serialization.number().optional(),
    frequencyPenalty: core.serialization.property("frequency_penalty", core.serialization.number().optional()),
    presencePenalty: core.serialization.property("presence_penalty", core.serialization.number().optional()),
    enabled: core.serialization.boolean().optional(),
    default: core.serialization.boolean().optional(),
});

export declare namespace GenerationPreset {
    interface Raw {
        name?: string | null;
        description?: string | null;
        llm_name?: string | null;
        prompt_template?: string | null;
        max_used_search_results?: number | null;
        max_tokens?: number | null;
        temperature?: number | null;
        frequency_penalty?: number | null;
        presence_penalty?: number | null;
        enabled?: boolean | null;
        default?: boolean | null;
    }
}
