/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vectara from "../../api/index";
import * as core from "../../core";
import { CustomDimensions } from "./CustomDimensions";
import { ComponentsSchemasMaxCharsChunkingStrategy } from "./ComponentsSchemasMaxCharsChunkingStrategy";

export const StructuredDocument: core.serialization.ObjectSchema<
    serializers.StructuredDocument.Raw,
    Vectara.StructuredDocument
> = core.serialization.object({
    id: core.serialization.string(),
    type: core.serialization.stringLiteral("structured"),
    title: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    customDimensions: core.serialization.property("custom_dimensions", CustomDimensions.optional()),
    sections: core.serialization.list(core.serialization.lazyObject(() => serializers.StructuredDocumentSection)),
    chunkingStrategy: core.serialization.property(
        "chunking_strategy",
        ComponentsSchemasMaxCharsChunkingStrategy.optional()
    ),
});

export declare namespace StructuredDocument {
    interface Raw {
        id: string;
        type: "structured";
        title?: string | null;
        description?: string | null;
        metadata?: Record<string, unknown> | null;
        custom_dimensions?: CustomDimensions.Raw | null;
        sections: serializers.StructuredDocumentSection.Raw[];
        chunking_strategy?: ComponentsSchemasMaxCharsChunkingStrategy.Raw | null;
    }
}
