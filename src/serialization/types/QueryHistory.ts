/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vectara from "../../api/index";
import * as core from "../../core";
import { QueryHistorySpan } from "./QueryHistorySpan";

export const QueryHistory: core.serialization.ObjectSchema<serializers.QueryHistory.Raw, Vectara.QueryHistory> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        query: core.serialization.unknown().optional(),
        chatId: core.serialization.property("chat_id", core.serialization.string().optional()),
        latencyMillis: core.serialization.property("latency_millis", core.serialization.number().optional()),
        startedAt: core.serialization.property("started_at", core.serialization.date().optional()),
        spans: core.serialization.list(QueryHistorySpan).optional(),
    });

export declare namespace QueryHistory {
    interface Raw {
        id?: string | null;
        query?: unknown | null;
        chat_id?: string | null;
        latency_millis?: number | null;
        started_at?: string | null;
        spans?: QueryHistorySpan.Raw[] | null;
    }
}
