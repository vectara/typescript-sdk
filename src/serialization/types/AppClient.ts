/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vectara from "../../api/index";
import * as core from "../../core";
import { ApiRole } from "./ApiRole";
import { ApiPolicy } from "./ApiPolicy";

export const AppClient: core.serialization.ObjectSchema<serializers.AppClient.Raw, Vectara.AppClient> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        clientId: core.serialization.property("client_id", core.serialization.string().optional()),
        clientSecret: core.serialization.property("client_secret", core.serialization.string().optional()),
        apiRoles: core.serialization.property("api_roles", core.serialization.list(ApiRole).optional()),
        apiPolicy: core.serialization.property("api_policy", ApiPolicy.optional()),
    });

export declare namespace AppClient {
    interface Raw {
        id?: string | null;
        name?: string | null;
        description?: string | null;
        client_id?: string | null;
        client_secret?: string | null;
        api_roles?: ApiRole.Raw[] | null;
        api_policy?: ApiPolicy.Raw | null;
    }
}
