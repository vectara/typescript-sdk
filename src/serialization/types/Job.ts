/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vectara from "../../api/index";
import * as core from "../../core";
import { JobType } from "./JobType";
import { CorpusKey } from "./CorpusKey";
import { JobState } from "./JobState";

export const Job: core.serialization.ObjectSchema<serializers.Job.Raw, Vectara.Job> = core.serialization.object({
    id: core.serialization.string().optional(),
    type: JobType.optional(),
    corpusKeys: core.serialization.property("corpus_keys", core.serialization.list(CorpusKey).optional()),
    state: JobState.optional(),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    startedAt: core.serialization.property("started_at", core.serialization.date().optional()),
    completedAt: core.serialization.property("completed_at", core.serialization.date().optional()),
});

export declare namespace Job {
    interface Raw {
        id?: string | null;
        type?: JobType.Raw | null;
        corpus_keys?: CorpusKey.Raw[] | null;
        state?: JobState.Raw | null;
        created_at?: string | null;
        started_at?: string | null;
        completed_at?: string | null;
    }
}
