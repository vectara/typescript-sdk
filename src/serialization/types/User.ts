/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vectara from "../../api/index";
import * as core from "../../core";
import { ApiRole } from "./ApiRole";
import { ApiPolicy } from "./ApiPolicy";

export const User: core.serialization.ObjectSchema<serializers.User.Raw, Vectara.User> = core.serialization.object({
    id: core.serialization.string().optional(),
    email: core.serialization.string().optional(),
    username: core.serialization.string().optional(),
    enabled: core.serialization.boolean().optional(),
    description: core.serialization.string().optional(),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
    apiRoles: core.serialization.property("api_roles", core.serialization.list(ApiRole).optional()),
    apiPolicy: core.serialization.property("api_policy", ApiPolicy.optional()),
});

export declare namespace User {
    interface Raw {
        id?: string | null;
        email?: string | null;
        username?: string | null;
        enabled?: boolean | null;
        description?: string | null;
        created_at?: string | null;
        updated_at?: string | null;
        api_roles?: ApiRole.Raw[] | null;
        api_policy?: ApiPolicy.Raw | null;
    }
}
